GIT Branch Manager 

概念：
	每次提交时，Git都把他们串成一条时间线，这条时间线就是一个分支。

作用：
	在自己的分支上开发，不会影响其他人的开发进度
	当在分支上开发功能完成，且测试稳定后，再一次性将代码全部合并到原来的分支上。
	
分支的创建于合并
	Git中，默认的分支为主分支(master)，HEAD实际上是指向分支，不是指向提交，master指向提交。
	
	创建：git checkout -b dev    ---git checkout -b 相当于创建并切换分支
	或
	使用命令：
	git branch dev 								---创建分支
	git checkout dev							---切换分支
	
	查看分支信息
	命令：git branch
	
	合并某分支到当前分支
	命令：git merge <name>
	
	删除分支：
	命令：git branch -d <name>
	
	
	Fast-forward 快进模式：直接将master分支指向当前分支
	
	
	
解决分支冲突
	在分支feature1上修改文件，
	git add filename
	git commit -m "xxxx" 提交文件
	
	切换到master库
	git checkout master
	修改文件
	git add filename
	git commit -m "xxxxx" 提交文件

	合并分支feature1到分支master
	git merge feature1
	
	提示冲突 Automatic merge failed；fix conflicts and then commit the result
	通过 git status 也能查看冲突
	
	修改文件filename
	git add filename
	git commit -m "xxxxxx"
	
	查看分支信息
	git log --graph
	git log --graph --pretty=oneline --abbrev-commit
	
	